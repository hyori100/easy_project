<Page x:Class="EasyProject.View.TabItemPage.IncomingOutgoingList1Page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:EasyProject.View.TabItemPage"
      xmlns:bod="clr-namespace:EasyProject.Util"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:wookoa="clr-namespace:System;assembly=mscorlib"
      xmlns:vm="clr-namespace:EasyProject.ViewModel" xmlns:conv="clr-namespace:EasyProject" xmlns:model="clr-namespace:EasyProject.Model" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d"
      DataContext="{Binding PIOVM, Source={StaticResource Locator}}"
      Title="IncomingOutgoingList1Page" Cursor="Hand">

    <Page.Resources>
        <local:MultipleTextFormatConverterKey x:Key="MultipleTextFormatConverterKey" />
       
        <Style x:Key="CellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}}" />
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#EAEAEA"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="#4472C4"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#4472C4"/>
            <Setter Property="RowHeight" Value="27"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>
        <Style TargetType="DataGridCell" x:Key="DataGridCellStyle">
            <Setter Property="Foreground" Value="#FF0059C0"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
    </Page.Resources>

    <Grid Height="550" Width="1090" HorizontalAlignment="Left" Margin="50,0,0,0">
        <!--<materialDesign:Card Grid.Column="0"  UniformCornerRadius="20" Background="White" >-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="0.3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="DataGridColumn" Width="1.9*"/>
                <ColumnDefinition x:Name="GraphColumn" Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0">
                <Grid Grid.Column="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.3*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">

                        <Grid Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="160*"/>
                                <ColumnDefinition Width="60*"/>
                                <ColumnDefinition Width="340*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DatePicker x:Name="expirationDate_DatePicker"  Grid.Column="0" HorizontalContentAlignment="Left" 
                                         FontSize="10" VerticalAlignment="Center" Width="70" Height="30" 
                                        SelectedDate="{Binding SelectedStartDate_In}" bod:BlackOutDatesHelper.RegisterBlackoutDates="{Binding BlackOutDates_In_Start}">

                                    <DatePicker.Resources>
                                        <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#ff2196f3" />
                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="white" />
                                        </Style>
                                        <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#ff2196f3" />
                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="White" />
                                        </Style>
                                        <Style x:Key="CustomCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="lightGray" />
                                            <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="DarkGray" />
                                            <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="White" />
                                            <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                                            <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
                                        </Style>
                                        <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                                            <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
                                        </Style>
                                    </DatePicker.Resources>
                                </DatePicker>

                                <TextBlock HorizontalAlignment="Center" Grid.Column="1" VerticalAlignment="Center" Text="~" FontWeight="Bold" FontSize="10" />
                                <DatePicker x:Name="expirationDate_DatePicker2" Grid.Column="2" HorizontalContentAlignment="Right" Width="70" Height="30"
                                        VerticalContentAlignment="Center" FontSize="10" VerticalAlignment="Center" 
                                        SelectedDate="{Binding SelectedEndDate_In}" >
                                    <DatePicker.Resources>
                                        <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#ff2196f3" />
                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="white" />
                                        </Style>
                                        <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#ff2196f3" />
                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="White" />
                                        </Style>
                                        <Style x:Key="CustomCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="lightGray" />
                                            <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="DarkGray" />
                                            <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="White" />
                                            <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                                            <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
                                        </Style>
                                        <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                                            <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
                                        </Style>
                                    </DatePicker.Resources>
                                </DatePicker>
                            </Grid>
                            <Grid Grid.Column="1" >
                                <Grid  HorizontalAlignment="Center" >
                                    <ComboBox x:Name="searchText_ComboBox"  Width="70" Height="30"  HorizontalContentAlignment="Center" Grid.Column="2" VerticalAlignment="Center" ItemsSource="{Binding Path=SearchTypeList}"
                                            SelectedItem="{Binding SelectedSearchType_In}" FontSize="10" Margin="0,3,0,0">
                                        <ComboBox.Resources>
                                            <SolidColorBrush x:Key="MaterialDesignPaper" Color="White"/>
                                        </ComboBox.Resources>
                                    </ComboBox>
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="2" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">


                                    <TextBox x:Name="phone_TxtBox" Style="{DynamicResource WatermarkTextBox}" Tag ="검색할 품목을 입력해주세요"  Width="360"
                                        VerticalContentAlignment="Center" FontSize="12" VerticalAlignment="Center" Margin="5" Height="30"  
                                        Text="{Binding SearchKeyword_In, UpdateSourceTrigger=PropertyChanged}" Cursor="Hand">

                                        <!--<TextBox.InputBindings>
                                            <KeyBinding Command="{Binding InSearchCommand}" Key="Enter" />
                                        </TextBox.InputBindings>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="KeyUp">
                                                <i:InvokeCommandAction Command="{Binding InSearchKeywordCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <Button x:Name="search_Btn" Grid.Column="2" Foreground="#4472C4"  FontSize="12" FontWeight="Bold"  Background="White"
                                        VerticalAlignment="Center" Height="30"  Width="45" HorizontalAlignment="Center" 
                                        Command="{Binding InSearchCommand}" Cursor="Hand">
                                        <materialDesign:PackIcon  Kind="Search" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="15" Width="15" />
                                    </Button>
                                </Grid>

                            </Grid>
                        </Grid>
                        <Grid Grid.Column="1">
                            
                        </Grid>
                        
                    </Grid>

                    <Grid Grid.Row="1">
                        



                        <DataGrid x:Name="dataGrid1" Grid.Row="1" HorizontalAlignment="Left"   VerticalAlignment="Top"
                              ScrollViewer.CanContentScroll="True"         
                              ScrollViewer.IsDeferredScrollingEnabled="True" ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                                  AutoGenerateColumns="False" CanUserSortColumns="True" IsReadOnly="True" Margin="10 0"
                                  ItemsSource="{Binding Product_in}" CellStyle="{StaticResource CellStyle}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Prod_code}" Header="제품코드" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Prod_name}" Header="제품명" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Category_name}" Header="품목/종류" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Prod_expire, StringFormat='yyyy-MM-dd'}" Header="유통기한" Width="1.3*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Prod_in_count, StringFormat='{}{0:#,0} 개'}" Header="수량" Width="0.5*" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>

                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Prod_in_date}" Header="입고일" Width="1.3*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Prod_in_type}" Header="입고유형" Width="0.5*" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Prod_in_type}" Value="이관">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Prod_in_type}" Value="신규">
                                                    <Setter Property="Foreground" Value="Blue"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Prod_in_type}" Value="추가">
                                                    <Setter Property="Foreground" Value="Green"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Prod_in_from}" Header="입고출처" Width="0.7*" IsReadOnly="True"/>
                                <DataGridTextColumn Header="관리자명" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding  Converter="{StaticResource MultipleTextFormatConverterKey}"  ConverterParameter="{}{0} ({1})">
                                            <Binding Path="Nurse_name" />
                                            <Binding Path="Dept_name" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <!--<DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="FontFamily" Value="Arial"/>
                                </Style>
                            </DataGrid.RowStyle>-->
                            
                        </DataGrid>
                        <Grid Grid.Row="2">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5 0 0 0">
                                <Button Height="23" HorizontalAlignment="Right"  Command="{Binding InFirstCommand}"
                            Name="btnFirst" VerticalAlignment="Bottom" Width="40" Foreground="White" Background="#4472C4"
                            Content="&lt;&lt;" Opacity="0.75" Margin="5">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="false"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInFirstEnabled}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button Height="23" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                    Name="btnPrev" Width="40" 
                                   Margin="5" Foreground="White" Background="#4472C4" Command="{Binding InPreviousCommand}"
                                    Opacity="0.75" Content="&lt;" Cursor="Hand">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="false"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInPreviousEnabled}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <TextBlock VerticalAlignment="Bottom" Margin="7">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} of {1}">
                                            <Binding Path="InCurrentPage" />
                                            <Binding Path="InNumberOfPages" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <Button Height="23" HorizontalAlignment="Left"  Foreground="White" Background="#4472C4"
                            Name="btnNext" VerticalAlignment="Bottom" Width="40" Margin="5" Command="{Binding InNextCommand}"
                            Content="&gt;" Opacity="0.75" Cursor="Hand">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="false"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInNextEnabled}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button Height="23" HorizontalAlignment="Left"   Foreground="White" Background="#4472C4"
                            VerticalAlignment="Bottom" Width="40" Name="btnLast" Margin="5" Command="{Binding InLastCommand}"
                             Opacity="0.75" Content="&gt;&gt;" Cursor="Hand">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="false"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInLastEnabled}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <ComboBox Margin="10 5" SelectedIndex="0" Width="100" SelectedItem ="{Binding InSelectedRecord, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                    <wookoa:Int32>10</wookoa:Int32>
                                    <wookoa:Int32>15</wookoa:Int32>
                                    <wookoa:Int32>20</wookoa:Int32>
                                    <wookoa:Int32>25</wookoa:Int32>
                                </ComboBox>
                            </StackPanel>
                        </Grid>

                    </Grid>
                    
                </Grid>
                
            </Grid>
            <Grid Grid.Column="1">
                

                <materialDesign:Card x:Name="GraphCard" Margin="0,10,0,0" UniformCornerRadius="20" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <Frame x:Name="Status_GraphFrame" NavigationUIVisibility="Hidden" Source="/View/TabItemPage/GraphPage/Incoming_GraphPage.xaml"  Height="430" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </materialDesign:Card>

            </Grid>

            <Grid Grid.Row="1">
                <Grid Grid.Column="0" >

                    <Button x:Name="export_btn" Height="26" HorizontalAlignment="Center" Grid.Column ="2" Foreground="White" Background="#4472C4"
                                VerticalAlignment="Center" Width="150"  FontSize="13" Margin="0,0,0,10" 
                                  Opacity="0.75" Cursor="Hand">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="MicrosoftExcel"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" />
                            <TextBlock Text="DownLoad" Margin="3,0,0,0" Foreground="White" FontWeight="Bold"></TextBlock>
                        </StackPanel>

                    </Button>



                </Grid>
            </Grid>
        </Grid>
        <!--</materialDesign:Card>-->
    </Grid>
</Page>